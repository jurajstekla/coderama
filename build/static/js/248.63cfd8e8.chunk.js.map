{"version":3,"file":"static/js/248.63cfd8e8.chunk.js","mappings":"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","sources":["api/actions/detailsActions.js","Components/Pages/Details/detailsHelpers.js","../node_modules/@mui/icons-material/esm/Delete.js","api/actions/favoritesActions.js","Components/Pages/Favorites/Favorites.js","Components/Pages/Favorites/favoritesHelpers.js","Global/HelperComponents/DisableableBox.js"],"sourcesContent":["import { api } from '../api';\n\nexport const getMovieDetialsAction = async movieId => {\n  const { data } = await api.get('', {\n    params: {\n      i: movieId\n    }\n  });\n  return data;\n};\n","import { useState } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { getMovieDetialsAction } from '../../../api/actions/detailsActions';\n\nconst isMovieFavorite = movieId => {\n  const favoriteMovies = localStorage.getItem('favoriteMovies');\n  let movieIds = JSON.parse(favoriteMovies) || [];\n\n  return movieIds.includes(movieId);\n};\n\nexport const getAllFavoriteMovieIds = () => {\n  const favoriteMovies = localStorage.getItem('favoriteMovies');\n  let movieIds = JSON.parse(favoriteMovies) || [];\n  return movieIds;\n};\n\nexport const handleSetIfFavorite = movieId => {\n  let movieIds = getAllFavoriteMovieIds();\n  if (movieIds.includes(movieId)) {\n    movieIds = movieIds.filter(id => id !== movieId);\n  } else {\n    movieIds = [...movieIds, movieId];\n  }\n  localStorage.setItem('favoriteMovies', JSON.stringify([...new Set(movieIds)]));\n};\n\nexport const useMovieDetails = movieId => {\n  const queryClient = useQueryClient();\n  const [isFavorite, setIsFavorite] = useState(isMovieFavorite(movieId));\n  const { data, isLoading } = useQuery(\n    ['movie', { movieId: movieId }],\n    () => getMovieDetialsAction(movieId),\n    {\n      enabled: movieId !== '',\n      refetchOnMount: false\n    }\n  );\n\n  const handleIsFavorite = () => {\n    handleSetIfFavorite(movieId);\n    setIsFavorite(prev => !prev);\n    queryClient.invalidateQueries('favorites');\n  };\n\n  return { data, isLoading, isFavorite, handleIsFavorite };\n};\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import { getAllFavoriteMovieIds } from '../../Components/Pages/Details/detailsHelpers';\nimport { api } from '../api';\n\nexport const getAllFFavoriteMoviesAction = async () => {\n  let movieIds = getAllFavoriteMovieIds();\n\n  const urls = movieIds.map(id =>\n    api.get('', {\n      params: {\n        i: id\n      }\n    })\n  );\n\n  let data = await Promise.all(urls);\n  data = data.map(el => {\n    return el.data;\n  });\n\n  data = data.map(el => {\n    return { ...el, id: el.imdbID };\n  });\n\n  return data;\n};\n","/* eslint-disable */\nimport React, { useMemo } from 'react';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { DataGrid, GridActionsCellItem } from '@mui/x-data-grid';\nimport DisableableBox from '../../../Global/HelperComponents/DisableableBox';\nimport { headerHeight } from '../../../Global/constants';\nimport { useFavorites } from './favoritesHelpers';\n\nconst Favorites = () => {\n  const { data, isLoading, handleRowClick, handleDeleteFromFavorites } = useFavorites();\n\n  const finalColumns = useMemo(\n    () => [\n      { field: 'Title', headerName: 'Title', flex: 1 },\n      { field: 'Type', headerName: 'Type', flex: 1 },\n      { field: 'Year', headerName: 'Year', flex: 1 },\n      {\n        field: 'actions',\n        type: 'actions',\n        headerName: 'Details',\n        width: 100,\n        flex: 1,\n        sortable: false,\n        getActions: params => [\n          <GridActionsCellItem\n            onClick={() => handleDeleteFromFavorites(params)}\n            icon={<Delete />}\n            label='See details...'\n          />\n        ]\n      }\n    ],\n    []\n  );\n\n  return (\n    <Box width={1} height={1} sx={{ p: 1 }}>\n      <Box sx={{ height: headerHeight / 2, mb: 2 }}>\n        <Typography variant='h4'>Favorite movies</Typography>\n      </Box>\n      <Box width={1} sx={{ height: `calc(100% - ${headerHeight / 2 + 14}px)` }}>\n        <DisableableBox loading={isLoading}>\n          <DataGrid\n            rows={data || []}\n            columns={finalColumns}\n            onRowClick={handleRowClick}\n            disableColumnFilter\n            pageSize={50}\n            headerHeight={45}\n            rowHeight={35}\n            rowsPerPageOptions={[50]}\n            stickyHeader\n            slots={{\n              noRowsOverlay: () => (\n                <Stack height='100%' alignItems='center' justifyContent='center'>\n                  <Typography variant='subtitle1'>No favorite movies ...</Typography>\n                </Stack>\n              )\n            }}\n          />\n        </DisableableBox>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Favorites;\n","import { useQuery, useQueryClient } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\nimport { handleSetIfFavorite } from '../Details/detailsHelpers';\nimport { getAllFFavoriteMoviesAction } from '../../../api/actions/favoritesActions';\n\nexport const useFavorites = () => {\n  const navigate = useNavigate();\n  const { data, isLoading } = useQuery('favorites', getAllFFavoriteMoviesAction);\n  const queryClient = useQueryClient();\n\n  const handleRowClick = ({ row }) => {\n    navigate(`/details/${row.id}`);\n  };\n\n  const handleDeleteFromFavorites = ({ row }) => {\n    handleSetIfFavorite(row.id);\n    queryClient.setQueryData('favorites', old => old.filter(item => item.id !== row.id));\n  };\n\n  return { data, isLoading, handleRowClick, handleDeleteFromFavorites };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, LinearProgress } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Condition from './Condition';\nimport { loaderSizes } from '../constants';\n\nconst DisableableBox = ({ children, loading, sx, loaderSize, linear, withoutBlur }) => {\n  return (\n    <Box\n      sx={sx}\n      style={{\n        pointerEvents: loading && 'none',\n        position: 'relative'\n      }}\n      width={1}\n      height={1}\n    >\n      <Box width={1} height={1} sx={{ position: 'absolute' }}>\n        {children}\n      </Box>\n      <Condition condition={loading}>\n        <Box\n          width={1}\n          height={1}\n          sx={{\n            zIndex: '10',\n            borderRadius: 2,\n            background: !withoutBlur && 'rgb(0 0 0 / 10%)'\n          }}\n        >\n          <Condition condition={linear}>\n            <Box\n              width={1}\n              height={1}\n              sx={{\n                display: 'flex',\n                alignItems: 'end'\n              }}\n            >\n              <LinearProgress sx={{ width: '100%' }} color='buttons' />\n            </Box>\n            <Box\n              width={1}\n              height={1}\n              sx={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              <CircularProgress color='buttons' size={loaderSizes[loaderSize]} />\n            </Box>\n          </Condition>\n        </Box>\n      </Condition>\n    </Box>\n  );\n};\n\nDisableableBox.propTypes = {\n  children: PropTypes.node,\n  loading: PropTypes.bool.isRequired,\n  loaderSize: PropTypes.oneOf(['small', 'medium', 'large']),\n  sx: PropTypes.object,\n  linear: PropTypes.bool,\n  withoutBlur: PropTypes.bool\n};\nDisableableBox.defaultProps = {\n  loaderSize: 'medium',\n  linear: false,\n  withoutBlur: false\n};\n\nexport default React.memo(DisableableBox);\n"],"names":["getMovieDetialsAction","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","movieId","_yield$api$get","data","wrap","_context","prev","next","api","get","params","i","sent","abrupt","stop","_x","apply","arguments","getAllFavoriteMovieIds","favoriteMovies","localStorage","getItem","JSON","parse","handleSetIfFavorite","movieIds","includes","filter","id","concat","_toConsumableArray","setItem","stringify","Set","useMovieDetails","queryClient","useQueryClient","_useState","useState","isMovieFavorite","_useState2","_slicedToArray","isFavorite","setIsFavorite","_useQuery","useQuery","enabled","refetchOnMount","isLoading","handleIsFavorite","invalidateQueries","createSvgIcon","_jsx","d","getAllFFavoriteMoviesAction","urls","map","Promise","all","el","_objectSpread","imdbID","_useFavorites","navigate","useNavigate","handleRowClick","row","handleDeleteFromFavorites","_ref2","setQueryData","old","item","useFavorites","finalColumns","useMemo","field","headerName","flex","type","width","sortable","getActions","GridActionsCellItem","onClick","icon","Delete","label","_jsxs","Box","height","sx","p","children","headerHeight","mb","Typography","variant","DisableableBox","loading","DataGrid","rows","columns","onRowClick","disableColumnFilter","pageSize","rowHeight","rowsPerPageOptions","stickyHeader","slots","noRowsOverlay","Stack","alignItems","justifyContent","loaderSize","linear","withoutBlur","style","pointerEvents","position","Condition","condition","zIndex","borderRadius","background","display","LinearProgress","color","CircularProgress","size","loaderSizes","defaultProps","React"],"sourceRoot":""}